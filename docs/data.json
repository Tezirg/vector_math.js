{
    "project": {
        "name": "vector_math.js",
        "description": "A Vector math library for 3D and 2D applications",
        "version": "0.0.1",
        "url": ""
    },
    "files": {
        "src\\aabb2.js": {
            "name": "src\\aabb2.js",
            "modules": {},
            "classes": {
                "Aabb2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\aabb3.js": {
            "name": "src\\aabb3.js",
            "modules": {},
            "classes": {
                "Aabb3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\matrix2.js": {
            "name": "src\\matrix2.js",
            "modules": {},
            "classes": {
                "Matrix2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\matrix3.js": {
            "name": "src\\matrix3.js",
            "modules": {},
            "classes": {
                "Matrix3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\matrix4.js": {
            "name": "src\\matrix4.js",
            "modules": {},
            "classes": {
                "Matrix4": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\plane.js": {
            "name": "src\\plane.js",
            "modules": {},
            "classes": {
                "Plane": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\quad.js": {
            "name": "src\\quad.js",
            "modules": {},
            "classes": {
                "Quad": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\quaternion.js": {
            "name": "src\\quaternion.js",
            "modules": {},
            "classes": {
                "Quaternion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\ray.js": {
            "name": "src\\ray.js",
            "modules": {},
            "classes": {
                "Ray": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\sphere.js": {
            "name": "src\\sphere.js",
            "modules": {},
            "classes": {
                "Sphere": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\triangle.js": {
            "name": "src\\triangle.js",
            "modules": {},
            "classes": {
                "Triangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\vector2.js": {
            "name": "src\\vector2.js",
            "modules": {},
            "classes": {
                "Vector2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\vector3.js": {
            "name": "src\\vector3.js",
            "modules": {},
            "classes": {
                "Vector3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\vector4.js": {
            "name": "src\\vector4.js",
            "modules": {},
            "classes": {
                "Vector4": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\vector_math.js": {
            "name": "src\\vector_math.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Aabb2": {
            "name": "Aabb2",
            "shortname": "Aabb2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\aabb2.js",
            "line": 9,
            "description": "Defines a 2-dimensional axis-aligned bounding box between a [min] and a [max] position.",
            "is_constructor": 1
        },
        "Aabb3": {
            "name": "Aabb3",
            "shortname": "Aabb3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\aabb3.js",
            "line": 14,
            "description": "Defines a 3-dimensional axis-aligned bounding box between a [min] and a [max] position.",
            "is_constructor": 1
        },
        "Matrix2": {
            "name": "Matrix2",
            "shortname": "Matrix2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\matrix2.js",
            "line": 8,
            "description": "2D Matrix. Values are stored in column major order.",
            "params": [
                {
                    "name": "m00",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m01",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m11",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m12",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Matrix3": {
            "name": "Matrix3",
            "shortname": "Matrix3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\matrix3.js",
            "line": 12,
            "description": "3D Matrix. Values are stored in column major order.",
            "params": [
                {
                    "name": "m00",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m10",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m20",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m01",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m11",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m21",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m02",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m12",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m22",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Matrix4": {
            "name": "Matrix4",
            "shortname": "Matrix4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\matrix4.js",
            "line": 13,
            "description": "4D Matrix. Values are stored in column major order.",
            "params": [
                {
                    "name": "m00",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m01",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m02",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m03",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m10",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m11",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m12",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m13",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m20",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m21",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m22",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m23",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m30",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m31",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m32",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m33",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Plane": {
            "name": "Plane",
            "shortname": "Plane",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\plane.js",
            "line": 8,
            "is_constructor": 1
        },
        "Quad": {
            "name": "Quad",
            "shortname": "Quad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\quad.js",
            "line": 9,
            "description": "Defines a quad by four points.",
            "is_constructor": 1
        },
        "Quaternion": {
            "name": "Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\quaternion.js",
            "line": 8,
            "description": "Defines a [Quaternion] (a four-dimensional vector) for efficient rotation calculations.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Ray": {
            "name": "Ray",
            "shortname": "Ray",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\ray.js",
            "line": 9,
            "description": "Defines a [Ray] by an [origin] and a [direction].",
            "is_constructor": 1
        },
        "Sphere": {
            "name": "Sphere",
            "shortname": "Sphere",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\sphere.js",
            "line": 8,
            "description": "Defines a sphere with a [center] and a [radius].",
            "is_constructor": 1
        },
        "Triangle": {
            "name": "Triangle",
            "shortname": "Triangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\triangle.js",
            "line": 8,
            "description": "Defines a triangle by three points.",
            "is_constructor": 1
        },
        "Vector2": {
            "name": "Vector2",
            "shortname": "Vector2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\vector2.js",
            "line": 10,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Vector3": {
            "name": "Vector3",
            "shortname": "Vector3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\vector3.js",
            "line": 13,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Vector4": {
            "name": "Vector4",
            "shortname": "Vector4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\vector4.js",
            "line": 9,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src\\aabb2.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 16,
            "itemtype": "property",
            "name": "min",
            "type": "{Vector2}",
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 23,
            "itemtype": "property",
            "name": "max",
            "type": "{Vector2}",
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 30,
            "itemtype": "method",
            "name": "center",
            "description": "Returns the center of this",
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 42,
            "static": "copy",
            "description": "Create a new AABB as a copy of [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb2"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 55,
            "static": "minMax",
            "description": "Create a new AABB with a [min] and [max].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb2"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 69,
            "static": "centerAndHalfExtends",
            "description": "Create a new AABB with a [center] and [halfExtents].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "halfExtents",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb2"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 82,
            "static": "from buffer",
            "description": "Constructs [Aabb2] with a min/max [storage] that views given [buffer]\nstarting at [offset]. [offset] has to be multiple of\n[Float32Array.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb2"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 98,
            "itemtype": "method",
            "name": "setCenterAndHalfExtends",
            "description": "Set the AABB by a [center] and [halfExtents].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "halfExtents",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 111,
            "itemtype": "method",
            "name": "copyCenterAndHalfExtends",
            "description": "Copy the [center] and the [halfExtends] of [this].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "halfExtents",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 126,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy the [min] and [max] from [other] into [this].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 136,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [this] by the transform [t].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb2"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 155,
            "itemtype": "method",
            "name": "rotate",
            "description": "Rotate [this] by the rotation matrix [t].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb2"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 173,
            "itemtype": "method",
            "name": "transformed",
            "description": "Create a copy of [this] that is transformed by the transform [t] and store\nit in [out].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix3"
                },
                {
                    "name": "out",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 185,
            "itemtype": "method",
            "name": "rotated",
            "description": "Create a copy of [this] that is rotated by the rotation matrix [t] and\nstore it in [out].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix3"
                },
                {
                    "name": "out",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 197,
            "itemtype": "method",
            "name": "hull",
            "description": "Set the min and max of [this] so that [this] is a hull of [this] and [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 207,
            "itemtype": "method",
            "name": "hullPoint",
            "description": "Set the min and max of [this] so that [this] contains [point].",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 217,
            "itemtype": "method",
            "name": "containsAabb2",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 233,
            "itemtype": "method",
            "name": "containsVector2",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 246,
            "itemtype": "method",
            "name": "intersectsWithAabb2",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb2.js",
            "line": 262,
            "itemtype": "method",
            "name": "intersectsWithVector2",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb2"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb2"
        },
        {
            "file": "src\\aabb3.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 20,
            "itemtype": "property",
            "name": "min",
            "type": "{Vector3}",
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 26,
            "itemtype": "property",
            "name": "max",
            "type": "{Vector3}",
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 33,
            "itemtype": "method",
            "name": "center",
            "description": "The center of the AABB.",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 46,
            "static": "copy",
            "description": "Create a new AABB as a copy of [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 59,
            "static": "minMax",
            "description": "Create a new AABB with a [min] and [max].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 73,
            "static": "fromSphere",
            "description": "Create a new AABB that encloses a [sphere].",
            "params": [
                {
                    "name": "sphere",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 85,
            "static": "fromTriangle",
            "description": "Create a new AABB that encloses a [triangle].",
            "params": [
                {
                    "name": "triangle",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 97,
            "static": "fromQuad",
            "description": "Create a new AABB that encloses a [quad].",
            "params": [
                {
                    "name": "quad",
                    "description": "",
                    "type": "Quad"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 110,
            "static": "fromRay",
            "description": "Create a new AABB that encloses a limited [ray] (or line segment) that has\na minLimit and maxLimit.",
            "params": [
                {
                    "name": "ray",
                    "description": "",
                    "type": "Ray"
                },
                {
                    "name": "limitMin",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "limitMax",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 126,
            "static": "centerAndHalfExtends",
            "description": "Create a new AABB with a [center] and [halfExtents].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "halfExtents",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 140,
            "static": "fromBuffer",
            "description": "Constructs [Aabb3] with a min/max [storage] that views given [buffer]\nstarting at [offset]. [offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 155,
            "itemtype": "method",
            "name": "setCenterAndHalfExtends",
            "description": "Set the AABB by a [center] and [halfExtents].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "halfExtents",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 169,
            "itemtype": "method",
            "name": "setSphere",
            "description": "Set the AABB to enclose a [sphere].",
            "params": [
                {
                    "name": "sphere",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 182,
            "itemtype": "method",
            "name": "setTriangle",
            "description": "Set the AABB to enclose a [triangle].",
            "params": [
                {
                    "name": "triangle",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 204,
            "itemtype": "method",
            "name": "setQuad",
            "description": "Set the AABB to enclose a [quad].",
            "params": [
                {
                    "name": "quad",
                    "description": "",
                    "type": "Quad"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 231,
            "itemtype": "method",
            "name": "setRay",
            "description": "Set the AABB to enclose a limited [ray] (or line segment) that is limited by [limitMin] and [limitMax].",
            "params": [
                {
                    "name": "ray",
                    "description": "",
                    "type": "Ray"
                },
                {
                    "name": "limitMin",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "limitMax",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 261,
            "itemtype": "method",
            "name": "copyCenterAndHalfExtends",
            "description": "Copy the [center] and the [halfExtends] of [this].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "halfExtents",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 277,
            "itemtype": "method",
            "name": "copyCenter",
            "description": "Copy the [center] of [this].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 288,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy the [min] and [max] from [other] into [this].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 298,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [this] by the transform [t].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 318,
            "itemtype": "method",
            "name": "rotate",
            "description": "Rotate [this] by the rotation matrix [t].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Aabb3"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 337,
            "itemtype": "method",
            "name": "transformed",
            "description": "Create a copy of [this] that is transformed by the transform [t] and store it in [out].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix4"
                },
                {
                    "name": "out",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 348,
            "itemtype": "method",
            "name": "rotated",
            "description": "Create a copy of [this] that is rotated by the rotation matrix [t] and store it in [out].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix4"
                },
                {
                    "name": "out",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 385,
            "itemtype": "method",
            "name": "hull",
            "description": "Set the min and max of [this] so that [this] is a hull of [this] and [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 395,
            "itemtype": "method",
            "name": "hullPoint",
            "description": "Set the min and max of [this] so that [this] contains [point].",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 405,
            "itemtype": "method",
            "name": "containsAabb3",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 423,
            "itemtype": "method",
            "name": "containsSphere",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 436,
            "itemtype": "method",
            "name": "containsVector3",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 451,
            "itemtype": "method",
            "name": "containsTriangle",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 463,
            "itemtype": "method",
            "name": "intersectsWithAabb3",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 481,
            "itemtype": "method",
            "name": "intersectsWithSphere",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 514,
            "itemtype": "method",
            "name": "intersectsWithVector3",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 540,
            "itemtype": "method",
            "name": "intersectsWithTriangle",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 716,
            "itemtype": "method",
            "name": "intersectsWithPlane",
            "description": "Return if [this] intersects with [other]",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Plane"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\aabb3.js",
            "line": 744,
            "itemtype": "method",
            "name": "intersectsWithQuad",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quad"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Aabb3"
        },
        {
            "file": "src\\matrix2.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 18,
            "itemtype": "property",
            "name": "storage",
            "type": "{Float32Array}",
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 24,
            "itemtype": "property",
            "name": "dimension",
            "type": "{number}",
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 31,
            "static": "fromFloat32Array",
            "description": "Constructs Matrix2 with a given [Float32Array] as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 43,
            "static": "fromBuffer",
            "description": "Constructs Matrix2 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 56,
            "static": "solve",
            "description": "Solve [A] * [x] = [b].",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Matrix2"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 80,
            "description": "Return index in storage for [row], [col] value.",
            "itemtype": "method",
            "name": "index",
            "params": [
                {
                    "name": "row",
                    "description": ""
                },
                {
                    "name": "col",
                    "description": ""
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 91,
            "itemtype": "method",
            "name": "entry",
            "description": "Value at [row], [col].",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number | null"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 109,
            "itemtype": "method",
            "name": "setEntry",
            "description": "Set value at [row], [col] to be [v].",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 128,
            "description": "Zero matrix.",
            "static": "zero",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 138,
            "static": "identity",
            "description": "Identity matrix.",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 149,
            "static": "copy",
            "description": "Copies values from [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 162,
            "static": "columns",
            "description": "Matrix with values from column arguments.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 176,
            "static": "outer",
            "description": "Outer product of [u] and [v].",
            "params": [
                {
                    "name": "u",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 190,
            "static": "rotation",
            "description": "Rotation of [radians].",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 203,
            "itemtype": "method",
            "name": "setValues",
            "description": "Sets the matrix with specified values.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg3",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 221,
            "itemtype": "method",
            "name": "setColumns",
            "description": "Sets the entire matrix to the column values.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 239,
            "itemtype": "method",
            "name": "setFrom",
            "description": "Sets the entire matrix to the matrix in [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 253,
            "itemtype": "method",
            "name": "setOuter",
            "description": "Set [this] to the outer product of [u] and [v].",
            "params": [
                {
                    "name": "u",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 271,
            "itemtype": "method",
            "name": "splatDiagonal",
            "description": "Sets the diagonal to [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 284,
            "itemtype": "method",
            "name": "setDiagonal",
            "description": "Sets the diagonal of the matrix to be [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 298,
            "itemtype": "method",
            "name": "toString",
            "description": "Printable string",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 308,
            "itemtype": "method",
            "name": "getAt",
            "description": "Access the element of the matrix at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 318,
            "itemtype": "method",
            "name": "setAt",
            "description": "Set the element of the matrix at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 328,
            "itemtype": "method",
            "name": "equals",
            "description": "Check if two matrices are the same.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 344,
            "itemtype": "method",
            "name": "almostEquals",
            "description": "Check if two matrices are almost the same.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix2"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 368,
            "itemtype": "property",
            "name": "row 0",
            "type": "{Vector2}",
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 380,
            "itemtype": "property",
            "name": "row 1",
            "type": "{Vector2}",
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 393,
            "itemtype": "method",
            "name": "setRow",
            "description": "Sets [row] of the matrix to values in [arg]",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 405,
            "itemtype": "method",
            "name": "get Row",
            "description": "Gets the [row] of the matrix",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 419,
            "itemtype": "method",
            "name": "setColumn",
            "description": "Assigns the [column] of the matrix [arg]",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 432,
            "itemtype": "method",
            "name": "getColumn",
            "description": "Gets the [column] of the matrix",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 447,
            "itemtype": "method",
            "name": "clone",
            "description": "Create a copy of [this].",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 456,
            "itemtype": "method",
            "name": "copyInto",
            "description": "Copy [this] into [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 471,
            "itemtype": "method",
            "name": "mult",
            "description": "Returns a new vector or matrix by multiplying [this] with [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 491,
            "itemtype": "method",
            "name": "added",
            "description": "Returns new matrix after component wise [this] + [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 503,
            "itemtype": "method",
            "name": "subbed",
            "description": "Returns new matrix after component wise [this] - [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 515,
            "itemtype": "method",
            "name": "negated",
            "description": "Returns new matrix after negating [this]",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 526,
            "itemtype": "method",
            "name": "setZero",
            "description": "Zeros [this].",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 539,
            "itemtype": "method",
            "name": "setIdentity",
            "description": "Makes [this] into the identity matrix.",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 552,
            "itemtype": "method",
            "name": "transposed",
            "description": "Returns the tranpose of this.",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 564,
            "itemtype": "method",
            "name": "transpose",
            "description": "Transpose [this]",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 576,
            "itemtype": "method",
            "name": "absolute",
            "description": "Returns the component wise absolute value copy of this.",
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 591,
            "itemtype": "method",
            "name": "determinant",
            "description": "Returns the determinant of this matrix.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 600,
            "itemtype": "method",
            "name": "dotRow",
            "description": "Returns the dot product of row [i] and [v].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 612,
            "itemtype": "method",
            "name": "dotColumn",
            "description": "Returns the dot product of column [j] and [v].",
            "params": [
                {
                    "name": "j",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 625,
            "itemtype": "method",
            "name": "trace",
            "description": "Trace of the matrix.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 637,
            "itemtype": "method",
            "name": "infinityNorm",
            "description": "Returns infinity norm of the matrix. Used for numerical analysis.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 659,
            "itemtype": "method",
            "name": "relativeError",
            "description": "Returns relative error between [this] and [correct]",
            "params": [
                {
                    "name": "correct",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 672,
            "itemtype": "method",
            "name": "absoluteError",
            "description": "Returns absolute error between [this] and [correct]",
            "params": [
                {
                    "name": "correct",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number|*"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 685,
            "itemtype": "method",
            "name": "invert",
            "description": "Invert the matrix. Returns the determinant.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 704,
            "itemtype": "method",
            "name": "copyInverse",
            "description": "Set this matrix to be the inverse of [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "determinant",
                "type": "Number"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 725,
            "itemtype": "method",
            "name": "setRotation",
            "description": "Turns the matrix  o a rotation of [radians]",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 739,
            "itemtype": "method",
            "name": "scaleAdjoint",
            "description": "Converts  into Adjugate matrix and scales by [scale]",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "this",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 754,
            "itemtype": "method",
            "name": "scale",
            "description": "Scale [this] by [scale].",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "this",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 768,
            "itemtype": "method",
            "name": "scaled",
            "description": "Create a copy of [this] scaled by [scale].",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "copy",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 780,
            "itemtype": "method",
            "name": "add",
            "description": "Add [o] to [this].",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "this",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 795,
            "itemtype": "method",
            "name": "sub",
            "description": "Subtract [o] from [this].",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "this",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 810,
            "itemtype": "method",
            "name": "negate",
            "description": "Negate [this].",
            "return": {
                "description": "this",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 823,
            "itemtype": "method",
            "name": "multiply",
            "description": "Multiply [this] with [arg] and store it in [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 846,
            "itemtype": "method",
            "name": "multiplied",
            "description": "Multiply [this] with [arg] and return the copy product.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "copy",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 858,
            "itemtype": "method",
            "name": "transposeMultiply",
            "description": "Multiply a transposed [this] with [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "this",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 877,
            "itemtype": "method",
            "name": "multiplyTranspose",
            "description": "Multiply [this] with a transposed [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 896,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [arg] of type [Vector2] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 911,
            "itemtype": "method",
            "name": "transformed",
            "description": "Transform a copy of [arg] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 922,
            "itemtype": "method",
            "name": "copyIntoArray",
            "description": "Copies [this]  into [array] starting at [offset].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix2.js",
            "line": 939,
            "itemtype": "method",
            "name": "copyFromArray",
            "description": "Copies elements from [array]  into [this] starting at [offset].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix2"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 27,
            "itemtype": "property",
            "name": "storage",
            "type": "{Float32Array}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 33,
            "itemtype": "property",
            "name": "simd_c0",
            "type": "{null | Float32x4}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 39,
            "itemtype": "property",
            "name": "simd_c1",
            "type": "{null | Float32x4}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 45,
            "itemtype": "property",
            "name": "simd_c2",
            "type": "{null | Float32x4}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 51,
            "itemtype": "property",
            "name": "dimension",
            "type": "{number}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 58,
            "itemtype": "property",
            "name": "simd",
            "description": "SIMD specialization",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 63,
            "itemtype": "property",
            "name": "scalar",
            "description": "Scalar specialization",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 69,
            "static": "load",
            "description": "Load SIMD.Float32x4 into vector.simd_storage",
            "params": [
                {
                    "name": "matrix",
                    "description": ".",
                    "type": "Matrix3"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 80,
            "static": "store",
            "description": "Store SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 91,
            "static": "fromFloat32Array",
            "description": "Constructs Matrix3 with a given [Float32Array] as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 103,
            "static": "fromBuffer",
            "description": "Constructs Matrix3 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 118,
            "static": "solve2",
            "description": "Solve [A] * [x] = [b].",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Matrix3"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 142,
            "static": "solve",
            "description": "Solve [A] * [x] = [b].",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Matrix3"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 195,
            "itemtype": "method",
            "name": "index",
            "description": "Return index in storage for [row], [col] value.",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 206,
            "itemtype": "method",
            "name": "entry",
            "description": "Value at [row], [col].",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "{null}",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 224,
            "itemtype": "method",
            "name": "setEntry",
            "description": "Set value at [row], [col] to be [v].",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 243,
            "static": "zero",
            "description": "Zero matrix.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 255,
            "static": "identity",
            "description": "Identity matrix.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 266,
            "static": "copy",
            "description": "Copies values from [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 278,
            "static": "columns",
            "description": "Matrix with values from column arguments.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 292,
            "static": "outer",
            "description": "Outer product of [u] and [v].",
            "params": [
                {
                    "name": "u",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 306,
            "static": "rotation",
            "description": "Rotation of [radians].",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 319,
            "static": "rotationX",
            "description": "Rotation of [radians] on X.",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 331,
            "static": "rotationY",
            "description": "Rotation of [radians] on Y.",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 343,
            "static": "rotationZ",
            "description": "Rotation of [radians] on Z.",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 356,
            "itemtype": "method",
            "name": "setValues",
            "description": "Sets the matrix with specified values.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg3",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg4",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg5",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg6",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg7",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg8",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 384,
            "itemtype": "method",
            "name": "setColumns",
            "description": "Sets the entire matrix to the column values.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 409,
            "methodsetfrom": "",
            "description": "Sets the entire matrix to the matrix in [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 429,
            "itemtype": "method",
            "name": "setOuter",
            "description": "Set [this] to the outer product of [u] and [v].",
            "params": [
                {
                    "name": "u",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 451,
            "itemtype": "method",
            "name": "splatDiagonal",
            "description": "Sets the diagonal to [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 464,
            "itemtype": "method",
            "name": "setDiagonal",
            "description": "Sets the diagonal of the matrix to be [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 478,
            "itemtype": "method",
            "name": "toString",
            "description": "Printable string",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 489,
            "itemtype": "method",
            "name": "getAt",
            "description": "Access the element of the matrix at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 499,
            "itemtype": "method",
            "name": "setAt",
            "description": "Set the element of the matrix at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 509,
            "itemtype": "method",
            "name": "equals",
            "description": "Check if two matrices are the same.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 530,
            "itemtype": "method",
            "name": "almostEquals",
            "description": "Check if two matrices are almost the same.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix3"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "optional": 1,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 559,
            "itemtype": "property",
            "name": "row 0",
            "type": "{Vector3}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 571,
            "itemtype": "property",
            "name": "row 1",
            "type": "{Vector3}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 583,
            "itemtype": "property",
            "name": "row 2",
            "type": "{Vector3}",
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 596,
            "itemtype": "method",
            "name": "setRow",
            "description": "Sets [row] of the matrix to values in [arg]",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 609,
            "itemtype": "method",
            "name": "getRow",
            "description": "Gets the [row] of the matrix",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 624,
            "itemtype": "method",
            "name": "setColumn",
            "description": "Assigns the [column] of the matrix [arg]",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 639,
            "itemtype": "method",
            "name": "getColumn",
            "description": "Gets the [column] of the matrix",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 655,
            "itemtype": "method",
            "name": "clone",
            "description": "Create a copy of [this].",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 664,
            "itemtype": "method",
            "name": "copyInto",
            "description": "Copy [this] into [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 675,
            "itemtype": "method",
            "name": "mult",
            "description": "return a new vector or matrix by multiplying [this] with [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 694,
            "itemtype": "method",
            "name": "added",
            "description": "return new matrix after component wise [this] + [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 706,
            "itemtype": "method",
            "name": "subbed",
            "description": "return new matrix after component wise [this] - [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 718,
            "itemtype": "method",
            "name": "negated",
            "description": "return new matrix after negating [this]",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 729,
            "itemtype": "method",
            "name": "setZero",
            "description": "Zeros [this].",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 747,
            "itemtype": "method",
            "name": "setIdentity",
            "description": "Makes [this] into the identity matrix.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 765,
            "itemtype": "method",
            "name": "transposed",
            "description": "return the tranpose of this.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 776,
            "itemtype": "method",
            "name": "transpose",
            "description": "Transpose [this]",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 794,
            "itemtype": "method",
            "name": "absolute",
            "description": "return the component wise absolute value copy of this.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 832,
            "itemtype": "method",
            "name": "determinant",
            "description": "return the determinant of this matrix.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 847,
            "itemtype": "method",
            "name": "dotRow",
            "description": "return the dot product of row [i] and [v].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 861,
            "itemtype": "method",
            "name": "dotColumn",
            "description": "return the dot product of column [j] and [v].",
            "params": [
                {
                    "name": "j",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 875,
            "itemtype": "method",
            "name": "trace",
            "description": "Trace of the matrix.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 888,
            "itemtype": "method",
            "name": "infinityNorm",
            "description": "return infinity norm of the matrix. Used for numerical analysis.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 920,
            "itemtype": "method",
            "name": "relativeError",
            "description": "return relative error between [this] and [correct]",
            "params": [
                {
                    "name": "correct",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 933,
            "itemtype": "method",
            "name": "absoluteError",
            "description": "return absolute error between [this] and [correct]",
            "params": [
                {
                    "name": "correct",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number|*"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 946,
            "itemtype": "method",
            "name": "invert",
            "description": "Invert the matrix. return the determinant.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 955,
            "itemtype": "method",
            "name": "copyInverse",
            "description": "Set this matrix to be the inverse of [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1000,
            "itemtype": "method",
            "name": "copyNormalMatrix",
            "description": "Set this matrix to be the normal matrix of [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1012,
            "itemtype": "method",
            "name": "setRotationX",
            "description": "Turns the matrix into a rotation of [radians] around X",
            "params": [
                {
                    "name": "radians",
                    "description": ""
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1031,
            "itemtype": "method",
            "name": "setRotationY",
            "description": "Turns the matrix into a rotation of [radians] around Y",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1050,
            "itemtype": "method",
            "name": "setRotationZ",
            "description": "Turns the matrix into a rotation of [radians] around Z",
            "params": [
                {
                    "name": "radians",
                    "description": ""
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1069,
            "itemtype": "method",
            "name": "scaleAdjoint",
            "description": "Converts into Adjugate matrix and scales by [scale]",
            "params": [
                {
                    "name": "scale",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1097,
            "itemtype": "method",
            "name": "absoluteRotate",
            "description": "Rotates [arg] by the absolute rotation of [this]\nreturn [arg]. Primarily used by AABB transformation code.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1124,
            "itemtype": "method",
            "name": "absoluteRotate2",
            "description": "Rotates [arg] by the absolute rotation of [this] return [arg].\nPrimarily used by AABB transformation code.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1143,
            "itemtype": "method",
            "name": "transform2",
            "description": "Transforms [arg] with [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1162,
            "itemtype": "method",
            "name": "scale",
            "description": "Scales [this] by [scale].",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1179,
            "itemtype": "method",
            "name": "scaled",
            "description": "Create a copy of [this] and scale it by [scale].",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1191,
            "itemtype": "method",
            "name": "add",
            "description": "Add [o] to [this].",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1227,
            "itemtype": "method",
            "name": "sub",
            "description": "Subtract [o] from [this].",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1263,
            "itemtype": "method",
            "name": "negate",
            "description": "Negate [this].",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1297,
            "itemtype": "method",
            "name": "multiply",
            "description": "Multiply [this] by [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1335,
            "itemtype": "method",
            "name": "multiplied",
            "description": "Create a copy of [this] and multiply it by [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1347,
            "itemtype": "method",
            "name": "transposeMultiply",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1384,
            "itemtype": "method",
            "name": "multiplyTranspose",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1421,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [arg] of type [Vector3] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1444,
            "itemtype": "method",
            "name": "transformed",
            "description": "Transform a copy of [arg] of type [Vector3] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1455,
            "itemtype": "method",
            "name": "copyFromArray",
            "description": "Copies elements from [array] into [this] starting at [offset].",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix3.js",
            "line": 1477,
            "itemtype": "method",
            "name": "applyToVector3Array",
            "description": "Multiply [this] to each set of xyz values in [array] starting at [offset].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Matrix3"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 38,
            "itemtype": "property",
            "name": "storage",
            "type": "{Float32Array}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 46,
            "itemtype": "property",
            "name": "simd_c0",
            "type": "{null | Float32x4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 52,
            "itemtype": "property",
            "name": "simd_c1",
            "type": "{null | Float32x4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 58,
            "itemtype": "property",
            "name": "simd_c2",
            "type": "{null | Float32x4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 63,
            "itemtype": "property",
            "name": "simd_c3",
            "type": "{null | Float32x4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 68,
            "itemtype": "property",
            "name": "dimension",
            "type": "{number}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 75,
            "static": "SIMD specialization",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 80,
            "static": "Scalar specialization",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 86,
            "static": "Load SIMD.Float32x4 into vector.simd_storage",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 98,
            "static": "Store SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 111,
            "static": "fromFloat32Array",
            "description": "Constructs Matrix4 with a given [Float32Array] as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 123,
            "static": "fromBuffer",
            "description": "Constructs Matrix2 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 136,
            "static": "solve2",
            "description": "Solve [A] * [x] = [b].",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Matrix4"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 160,
            "static": "solve3",
            "description": "Solve [A] * [x] = [b].",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Matrix4"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 215,
            "static": "solve",
            "description": "Solve [A] * [x] = [b].",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Matrix4"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 289,
            "itemtype": "method",
            "name": "index",
            "description": "Return index in storage for [row], [col] value.",
            "params": [
                {
                    "name": "row",
                    "description": ""
                },
                {
                    "name": "col",
                    "description": ""
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 300,
            "itemtype": "method",
            "name": "entry",
            "description": "Value at [row], [col].",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "{null}",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 318,
            "itemtype": "method",
            "name": "setEntry",
            "description": "Set value at [row], [col] to be [v].",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 337,
            "static": "zero",
            "description": "Zero matrix.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 350,
            "static": "identity",
            "description": "Identity matrix.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 361,
            "static": "cpoy",
            "description": "Copies values from [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 373,
            "static": "columns",
            "description": "Matrix with values from column arguments.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "arg3",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 388,
            "static": "outer",
            "description": "Outer product of [u] and [v].",
            "params": [
                {
                    "name": "u",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 401,
            "static": "rotation",
            "description": "Rotation of [radians].",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 414,
            "static": "rotationX",
            "description": "Rotation of [radians] on X.",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 427,
            "static": "rotationY",
            "description": "Rotation of [radians] on Y.",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 440,
            "static": "rotationZ",
            "description": "Rotation of [radians] on Z.",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 453,
            "static": "translation",
            "description": "Scale matrix",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 466,
            "static": "diagonalValues",
            "description": "Scale matrix from values x,y,z,w",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 482,
            "static": "translation",
            "description": "Translation matrix",
            "params": [
                {
                    "name": "translation",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 495,
            "static": "translationValues",
            "description": "Translation matrix from values x,y,z",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 510,
            "static": "compose",
            "description": "Constructs a Matrix4 from translation, rotation and scale",
            "params": [
                {
                    "name": "translation",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Quaternion"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 524,
            "itemtype": "method",
            "name": "splatDiagonal",
            "description": "Sets the diagonal to [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 538,
            "itemtype": "method",
            "name": "setValues",
            "description": "Sets the matrix with specified values",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg3",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg4",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg5",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg6",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg7",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg8",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg9",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg10",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg11",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg12",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg13",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg14",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg15",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 582,
            "itemtype": "method",
            "name": "setColumns",
            "description": "Sets the entire matrix to the column values.",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "arg2",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "arg3",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 615,
            "itemtype": "method",
            "name": "setFrom",
            "description": "Sets the entire matrix to the matrix in [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 642,
            "itemtype": "method",
            "name": "setFromTranslationRotation",
            "description": "Sets the matrix from translation [arg0] and rotation [arg1].",
            "params": [
                {
                    "name": "arg0",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "arg1",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 688,
            "itemtype": "method",
            "name": "setFromTranslationRotationScale",
            "description": "Sets the matrix from [translation], [rotation] and [scale].",
            "params": [
                {
                    "name": "translation",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Quaternion"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 702,
            "itemtype": "method",
            "name": "setUpper2x2",
            "description": "Sets the upper 2x2 of the matrix to be [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 717,
            "itemtype": "method",
            "name": "setDiagonal",
            "description": "Sets the diagonal of the matrix to be [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 732,
            "itemtype": "method",
            "name": "setOuter",
            "description": "Set [this] to the outer product of [u] and [v].",
            "params": [
                {
                    "name": "u",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 777,
            "itemtype": "method",
            "name": "toString",
            "description": "Printable string",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 789,
            "itemtype": "method",
            "name": "getAt",
            "description": "Access the element of the matrix at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 799,
            "itemtype": "method",
            "name": "setAt",
            "description": "Set the element of the matrix at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 809,
            "itemtype": "method",
            "name": "equals",
            "description": "Check if two matrices are the same.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 837,
            "itemtype": "method",
            "name": "almostEquals",
            "description": "Check if two matrices are almost the same.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Matrix4"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 919,
            "itemtype": "property",
            "name": "row 0",
            "type": "{Vector4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 931,
            "itemtype": "property",
            "name": "row 1",
            "type": "{Vector4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 943,
            "itemtype": "property",
            "name": "row 2",
            "type": "{Vector4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 955,
            "itemtype": "property",
            "name": "row 3",
            "type": "{Vector4}",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 967,
            "itemtype": "method",
            "name": "/// Sets [row] of the matrix to values in [arg]",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 981,
            "itemtype": "method",
            "name": "getRow",
            "description": "Gets the [row] of the matrix",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 997,
            "itemtype": "method",
            "name": "setColumn",
            "description": "Assigns the [column] of the matrix [arg]",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1013,
            "itemtype": "method",
            "name": "getColumn",
            "description": "Gets the [column] of the matrix",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1030,
            "itemtype": "method",
            "name": "clone",
            "description": "Create a copy of [this].",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1039,
            "itemtype": "method",
            "name": "copyInto",
            "description": "Copy [this] into [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1050,
            "itemtype": "method",
            "name": "mult",
            "description": "return a new vector or matrix by multiplying [this] with [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1072,
            "itemtype": "method",
            "name": "added",
            "description": "return new matrix after component wise [this] + [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1084,
            "itemtype": "method",
            "name": "subbed",
            "description": "return new matrix after component wise [this] - [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1096,
            "itemtype": "method",
            "name": "negated",
            "description": "return new matrix after negating [this]",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1107,
            "itemtype": "method",
            "name": "translate",
            "description": "Translate this matrix by a [Vector3], [Vector4], or x,y,z",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector4|Vector3|number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1172,
            "itemtype": "method",
            "name": "rotate",
            "description": "Rotate this [angle] radians around [axis]",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1225,
            "itemtype": "method",
            "name": "rotateX",
            "description": "Rotate this [angle] radians around X",
            "params": [
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1253,
            "itemtype": "method",
            "name": "rotateY",
            "description": "Rotate this matrix [angle] radians around Y",
            "params": [
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1281,
            "itemtype": "method",
            "name": "rotateZ",
            "description": "Rotate this matrix [angle] radians around Z",
            "params": [
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1310,
            "itemtype": "method",
            "name": "scale",
            "description": "Scale this matrix by a [Vector3], [Vector4], or x,y,z",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Vector4 | Vector3 | number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number | undefined"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number | undefined"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1368,
            "itemtype": "method",
            "name": "scaled",
            "description": "Create a copy of [this] scaled by a [Vector3], [Vector4] or [x],[y], and [z].",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1382,
            "itemtype": "method",
            "name": "setZero",
            "description": "Zeros [this].",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1408,
            "itemtype": "method",
            "name": "setIdentity",
            "description": "Makes [this] into the identity matrix.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1433,
            "itemtype": "method",
            "name": "transposed",
            "description": "return the tranpose copy of this.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1444,
            "itemtype": "method",
            "name": "transpose",
            "description": "transpose this.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1496,
            "itemtype": "method",
            "name": "absolute",
            "description": "return the component wise absolute value copy of that.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1539,
            "itemtype": "method",
            "name": "determinant",
            "description": "return the determinant of this matrix.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1575,
            "itemtype": "method",
            "name": "dotRow",
            "description": "return the dot product of row [i] and [v].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1590,
            "itemtype": "method",
            "name": "dotColumn",
            "description": "return the dot product of column [j] and [v].",
            "params": [
                {
                    "name": "j",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1605,
            "itemtype": "method",
            "name": "trace",
            "description": "return the trace of the matrix. The trace of a matrix is the sum of the diagonal entries.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1619,
            "itemtype": "method",
            "name": "infinityNorm",
            "description": "return infinity norm of the matrix. Used for numerical analysis.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1661,
            "itemtype": "method",
            "name": "relativeError",
            "description": "return relative error between [this] and [correct]",
            "params": [
                {
                    "name": "correct",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1673,
            "itemtype": "method",
            "name": "absoluteError",
            "description": "return absolute error between [this] and [correct]",
            "params": [
                {
                    "name": "correct",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1687,
            "itemtype": "method",
            "name": "getTranslation",
            "description": "return the translation vector from this homogeneous transformation matrix.",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1699,
            "itemtype": "method",
            "name": "setTranslation",
            "description": "Sets the translation vector in this homogeneous transformation matrix.",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1714,
            "itemtype": "method",
            "name": "getRotation",
            "description": "return the rotation matrix from this homogeneous transformation matrix.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1725,
            "itemtype": "method",
            "name": "copyRotation",
            "description": "Copies the rotation matrix from this homogeneous transformation matrix into [rotation].",
            "params": [
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1743,
            "itemtype": "method",
            "name": "setRotation",
            "description": "Sets the rotation matrix in this homogeneous transformation matrix.",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1761,
            "itemtype": "method",
            "name": "getNormalMatrix",
            "description": "return the normal matrix from this homogeneous transformation matrix. The normal\nmatrix is the transpose of the inverse of the top-left 3x3 part of this 4x4 matrix.",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1774,
            "itemtype": "method",
            "name": "getMaxScaleOnAxis",
            "description": "return the max scale value of the 3 axes.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1792,
            "itemtype": "method",
            "name": "transposeRotation",
            "description": "Transposes just the upper 3x3 rotation matrix.",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1820,
            "itemtype": "method",
            "name": "invert",
            "description": "Invert [this].",
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1828,
            "itemtype": "method",
            "name": "copyInverse",
            "description": "Set this matrix to be the inverse of [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 1989,
            "itemtype": "method",
            "name": "invertRotation",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2038,
            "itemtype": "method",
            "name": "setRotationX",
            "description": "Sets the upper 3x3 to a rotation of [radians] around X",
            "params": [
                {
                    "name": "radians",
                    "description": ""
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2060,
            "itemtype": "method",
            "name": "setRotationY",
            "description": "Sets the upper 3x3 to a rotation of [radians] around Y",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2082,
            "itemtype": "method",
            "name": "setRotationZ",
            "description": "Sets the upper 3x3 to a rotation of [radians] around Z",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2104,
            "itemtype": "method",
            "name": "scaleAdjoint",
            "description": "Converts into Adjugate matrix and scales by [scale]",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2404,
            "itemtype": "method",
            "name": "absoluteRotate",
            "description": "Rotates [arg] by the absolute rotation of [that] return [arg].\nPrimarily used by AABB transformation code.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2431,
            "itemtype": "method",
            "name": "add",
            "description": "Add [o] to [this].",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2475,
            "itemtype": "method",
            "name": "sub",
            "description": "Subtract [o] from [this].",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2520,
            "itemtype": "method",
            "name": "negate",
            "description": "Negate [this].",
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2563,
            "itemtype": "method",
            "name": "multiply",
            "description": "Multiply [this] by [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2682,
            "itemtype": "method",
            "name": "multiplied",
            "description": "Create a copy of [this] and multiply it by [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2695,
            "itemtype": "method",
            "name": "transposeMultiply",
            "description": "Multiply a transposed [this] with [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2786,
            "itemtype": "method",
            "name": "multiplyTranspose",
            "description": "Multiply [this] with a transposed [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2877,
            "itemtype": "method",
            "name": "decompose",
            "description": "Decomposes [this] into [translation], [rotation] and [scale] components.",
            "params": [
                {
                    "name": "translation",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Quaternion"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2918,
            "itemtype": "method",
            "name": "rotate3",
            "description": "Rotate [arg] of type [Vector3] using the rotation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2941,
            "itemtype": "method",
            "name": "rotated3",
            "description": "Rotate a copy of [arg] of type [Vector3] using the rotation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2952,
            "itemtype": "method",
            "name": "transform3",
            "description": "Transform [arg] of type [Vector3] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2978,
            "itemtype": "method",
            "name": "transformed3",
            "description": "Transform a copy of [arg] of type [Vector3] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 2989,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [arg] of type [Vector4] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 3020,
            "itemtype": "method",
            "name": "perspectiveTransform",
            "description": "Transform [arg] of type [Vector3] using the perspective transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 3051,
            "itemtype": "method",
            "name": "transformed",
            "description": "Transform a copy of [arg] of type [Vector4] using the transformation defined by [this].",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 3062,
            "itemtype": "method",
            "name": "copyIntoArray",
            "description": "Copies [this] into [array] starting at [offset].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\matrix4.js",
            "line": 3091,
            "itemtype": "method",
            "name": "copyFromArray",
            "description": "Copies elements from [array] into [this] starting at [offset].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Matrix4"
        },
        {
            "file": "src\\plane.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 17,
            "static": "intersection",
            "description": "Find the intersection point between the three planes [a], [b] and [c] and copy it into [result].",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Plane"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Plane"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Plane"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 43,
            "static": "copy",
            "description": "return a copy of other",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Plane"
                }
            ],
            "return": {
                "description": "",
                "type": "Plane"
            },
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 56,
            "static": "components",
            "description": "Constructs a Plane from components",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Plane"
            },
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 71,
            "static": "normalconstant",
            "description": "Constructs a Plane from a normal vector and constant value",
            "params": [
                {
                    "name": "normal",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "constant",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Plane"
            },
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 86,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy other into this",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Plane"
                }
            ],
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 96,
            "itemtype": "method",
            "name": "setFromComponents",
            "description": "Sets this from values",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 109,
            "itemtype": "method",
            "name": "normalize",
            "description": "Normalize this",
            "class": "Plane"
        },
        {
            "file": "src\\plane.js",
            "line": 119,
            "itemtype": "method",
            "name": "distanceToVector3",
            "description": "Compute distance to a point",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Plane"
        },
        {
            "file": "src\\quad.js",
            "line": 1,
            "description": "Created by grizet_j on 9/27/2015.",
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 16,
            "itemtype": "property",
            "name": "point0\nThe first point of the quad.",
            "type": "{Vector3}",
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 23,
            "itemtype": "property",
            "name": "point1",
            "type": "{Vector3}\nThe second point of the quad.",
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 30,
            "itemtype": "property",
            "name": "point2",
            "type": "{Vector3}\nThe third point of the quad.",
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 37,
            "itemtype": "property",
            "name": "point3",
            "type": "{Vector3}\nThe third point of the quad.",
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 46,
            "static": "copy",
            "description": "Create a quad as a copy of [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quad"
                }
            ],
            "return": {
                "description": "",
                "type": "Quad"
            },
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 61,
            "static": "points",
            "description": "Create a quad by four points.",
            "params": [
                {
                    "name": "point0",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "point1",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "point2",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "point3",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Quad"
            },
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 79,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy the quad from [other] into [this].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quad"
                }
            ],
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 91,
            "itemtype": "method",
            "name": "copyNormalInto",
            "description": "Copy the normal of [this] into [normal].",
            "params": [
                {
                    "name": "normal",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 105,
            "itemtype": "method",
            "name": "copyTriangles",
            "description": "Copies the two triangles that define [this].",
            "params": [
                {
                    "name": "triangle0",
                    "description": "",
                    "type": "Triangle"
                },
                {
                    "name": "triangle1",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 120,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [this] by the transform [t].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "class": "Quad"
        },
        {
            "file": "src\\quad.js",
            "line": 132,
            "itemtype": "method",
            "name": "translate",
            "description": "Translate [this] by [offset].",
            "params": [
                {
                    "name": "offset",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Quad"
        },
        {
            "file": "src\\quaternion.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 21,
            "itemtype": "property",
            "name": "x",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 33,
            "itemtype": "property",
            "name": "y",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 44,
            "itemtype": "property",
            "name": "z",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 55,
            "itemtype": "property",
            "name": "w",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 66,
            "static": "Zero quaternion",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 76,
            "static": "fromRotation",
            "params": [
                {
                    "name": "rotationMatrix",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 87,
            "static": "axisAngle",
            "description": "Constructs from axis and angle",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 106,
            "static": "random",
            "description": "Constructs a quaternion with a random rotation. The random number\ngenerator [rn] is used to generate the random numbers for the rotation.",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 119,
            "static": "identity",
            "description": "Constructs a quaternion set to the identity quaternion.",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 130,
            "static": "dq",
            "description": "Constructs a quaternion from time derivative of [q] with angular velocity [omega].",
            "params": [
                {
                    "name": "q",
                    "description": "",
                    "type": "Quaternion"
                },
                {
                    "name": "omega",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 143,
            "static": "euler",
            "description": "Constructs a quaternion from [yaw], [pitch] and [roll].",
            "params": [
                {
                    "name": "yaw",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pitch",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "roll",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 158,
            "static": "fromFloat32Array",
            "description": "Constructs a quaternion with given Float32Array as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 170,
            "static": "fromBuffer",
            "description": "Constructs a quaternion with a [storage] that views given [buffer] starting at [offset].\n[offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 184,
            "itemtype": "method",
            "name": "clone",
            "description": "Returns a new copy of [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 193,
            "itemtype": "method",
            "name": "setFrom",
            "description": "Copy [source] into [this].",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 206,
            "itemtype": "method",
            "name": "setValues",
            "description": "Set the quaternion to the raw values [x], [y], [z], and [w].",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 221,
            "itemtype": "method",
            "name": "setAxisAngle",
            "description": "Set the quaternion with rotation of [radians] around [axis].",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 240,
            "itemtype": "method",
            "name": "setFromRotation",
            "description": "Set the quaternion with rotation from a rotation matrix [rotationMatrix].",
            "params": [
                {
                    "name": "rotationMatrix",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 279,
            "itemtype": "method",
            "name": "setRandom",
            "description": "Set the quaternion to a random rotation. The random number generator [rn]\nis used to generate the random numbers for the rotation.",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 300,
            "itemtype": "method",
            "name": "setDQ",
            "description": "Set the quaternion to the time derivative of [q] with angular velocity [omega].",
            "params": [
                {
                    "name": "q",
                    "description": "",
                    "type": "Quaternion"
                },
                {
                    "name": "omega",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 326,
            "itemtype": "method",
            "name": "setEuler",
            "description": "Set quaternion with rotation of [yaw], [pitch] and [roll].",
            "params": [
                {
                    "name": "yaw",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pitch",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "roll",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 349,
            "itemtype": "method",
            "name": "normalize",
            "description": "Normalize [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 367,
            "itemtype": "method",
            "name": "conjugate",
            "description": "Conjugate [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 379,
            "itemtype": "method",
            "name": "inverse",
            "description": "Invert [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 393,
            "itemtype": "method",
            "name": "normalized",
            "description": "Normalized copy of [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 404,
            "itemtype": "method",
            "name": "conjugated",
            "description": "Conjugated copy of [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 415,
            "itemtype": "method",
            "name": "inverted",
            "description": "Inverted copy of [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 426,
            "itemtype": "property",
            "name": "radians",
            "description": "[radians] of rotation around the [axis] of the rotation.",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 435,
            "itemtype": "property",
            "name": "axis",
            "description": "[axis] of rotation.",
            "type": "{Vector3}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 445,
            "itemtype": "property",
            "name": "length2",
            "description": "Length squared.",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 458,
            "itemtype": "property",
            "name": "length",
            "description": "Length.",
            "type": "{number}",
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 467,
            "itemtype": "method",
            "name": "rotated",
            "description": "Returns a copy of [v] rotated by quaternion.",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 479,
            "itemtype": "method",
            "name": "rotate",
            "description": "Rotates [v] by [this].",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 509,
            "itemtype": "method",
            "name": "add",
            "description": "Add [arg] to [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 522,
            "itemtype": "method",
            "name": "sub",
            "description": "Subtracts [arg] from [this].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 535,
            "itemtype": "method",
            "name": "scale",
            "description": "Scales [this] by [scale].",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 547,
            "itemtype": "method",
            "name": "scaled",
            "description": "Scaled copy of [this].",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 559,
            "itemtype": "method",
            "name": "mult",
            "description": "[this] rotated by [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 582,
            "itemtype": "method",
            "name": "equals",
            "description": "Returns if other equals this",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 595,
            "itemtype": "method",
            "name": "almostEquals",
            "description": "Returns if other is almost this",
            "params": [
                {
                    "name": "q",
                    "description": "",
                    "type": "Quaternion"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 615,
            "itemtype": "method",
            "name": "added",
            "description": "Returns copy of [this] + [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 627,
            "itemtype": "method",
            "name": "subbed",
            "description": "Returns copy of [this] - [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 639,
            "itemtype": "method",
            "name": "negated",
            "description": "Returns negated copy of [this].",
            "return": {
                "description": "",
                "type": "Quaternion"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 648,
            "itemtype": "method",
            "name": "getAt",
            "description": "Access the component of the quaternion at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 658,
            "itemtype": "method",
            "name": "setAt",
            "description": "Set the component of the quaternion at the index [i].",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 668,
            "itemtype": "method",
            "name": "asRotationMatrix",
            "description": "Returns a rotation matrix containing the same rotation as [this].",
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 677,
            "itemtype": "method",
            "name": "copyRotationInto",
            "description": "Set [rotationMatrix] to a rotation matrix containing the same rotation as [this].",
            "params": [
                {
                    "name": "rotationMatrix",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Matrix3"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 724,
            "itemtype": "method",
            "name": "toString",
            "description": "Printable string.",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 736,
            "itemtype": "method",
            "name": "relativeError",
            "description": "Relative error between [this] and [correct].",
            "params": [
                {
                    "name": "correct",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\quaternion.js",
            "line": 749,
            "itemtype": "method",
            "name": "absoluteError",
            "description": "Absolute error between [this] and [correct].",
            "params": [
                {
                    "name": "correct",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Quaternion"
        },
        {
            "file": "src\\ray.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 15,
            "itemtype": "property",
            "name": "origin",
            "type": "{Vector3}",
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 21,
            "itemtype": "property",
            "name": "direction",
            "type": "{Vector3}",
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 28,
            "static": "copy",
            "description": "Create a ray as a copy of [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Ray"
                }
            ],
            "return": {
                "description": "",
                "type": "Ray"
            },
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 41,
            "static": "originDirection",
            "description": "Create a ray with an [origin] and a [direction].",
            "params": [
                {
                    "name": "origin",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "direction",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Ray"
            },
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 55,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy the [origin] and [direction] from [other] into [this].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Ray"
                }
            ],
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 65,
            "itemtype": "method",
            "name": "at",
            "description": "return the position on [this] with a distance of [t] from [origin].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 77,
            "itemtype": "method",
            "name": "copyAt",
            "description": "Copy the position on [this] with a distance of [t] from [origin] into [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 89,
            "itemtype": "method",
            "name": "intersectsWithSphere",
            "description": "Return the distance from the origin of [this] to the intersection with\n[other] if [this] intersects with [other], or null if the don't intersect.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "return": {
                "description": "",
                "type": "Number|null"
            },
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 124,
            "itemtype": "method",
            "name": "intersectsWithTriangle",
            "description": "Return the distance from the origin of [this] to the intersection with\n[other] if [this] intersects with [other], or null if the don't intersect.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "return": {
                "description": "",
                "type": "Number | null"
            },
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 171,
            "itemtype": "method",
            "name": "intersectsWithQuad",
            "description": "Return the distance from the origin of [this] to the intersection with\n[other] if [this] intersects with [other], or null if the don't intersect.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quad"
                }
            ],
            "return": {
                "description": "",
                "type": "Number | null"
            },
            "class": "Ray"
        },
        {
            "file": "src\\ray.js",
            "line": 246,
            "itemtype": "method",
            "name": "intersectsWithAabb3",
            "description": "Return the distance from the origin of [this] to the intersection with\n[other] if [this] intersects with [other], or null if the don't intersect.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Aabb3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number | null"
            },
            "class": "Ray"
        },
        {
            "file": "src\\sphere.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 14,
            "itemtype": "property",
            "name": "center",
            "type": "{Vector3}",
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 20,
            "itemtype": "property",
            "name": "radius",
            "type": "{number}",
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 26,
            "static": "copy",
            "description": "Create a sphere as a copy of [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "return": {
                "description": "",
                "type": "Sphere"
            },
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 39,
            "static": "centerRadius",
            "description": "Create a sphere from a [center] and a [radius].",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Sphere"
            },
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 53,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy the sphere from [other] into [this].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 63,
            "itemtype": "method",
            "name": "containsVector3",
            "description": "Return if [this] contains [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 73,
            "itemtype": "method",
            "name": "intersectsWithVector3",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Sphere"
        },
        {
            "file": "src\\sphere.js",
            "line": 83,
            "itemtype": "method",
            "name": "intersectsWithSphere",
            "description": "Return if [this] intersects with [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Sphere"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Sphere"
        },
        {
            "file": "src\\triangle.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 14,
            "itemtype": "property",
            "name": "point0",
            "type": "{Vector3}",
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 20,
            "itemtype": "property",
            "name": "point1",
            "type": "{Vector3}",
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 26,
            "itemtype": "property",
            "name": "point2",
            "type": "{Vector3}",
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 33,
            "static": "copy",
            "description": "Create a triangle as a copy of [other].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "return": {
                "description": "",
                "type": "Triangle"
            },
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 47,
            "static": "points",
            "description": "Create a triangle by three points.",
            "params": [
                {
                    "name": "point0",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "point1",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "point2",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Triangle"
            },
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 63,
            "itemtype": "method",
            "name": "copyFrom",
            "description": "Copy the triangle from [other] into [this].",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 74,
            "itemtype": "method",
            "name": "copyNormalInto",
            "description": "Copy the normal of [this] into [normal].",
            "params": [
                {
                    "name": "normal",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 88,
            "itemtype": "method",
            "name": "transform",
            "description": "Transform [this] by the transform [t].",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "class": "Triangle"
        },
        {
            "file": "src\\triangle.js",
            "line": 99,
            "itemtype": "method",
            "name": "translate",
            "description": "Translate [this] by [offset].",
            "params": [
                {
                    "name": "offset",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Triangle"
        },
        {
            "file": "src\\vector2.js",
            "line": 1,
            "description": "Created by grizet_j on 9/20/2015.",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 17,
            "itemtype": "property",
            "name": "storage",
            "type": "{Float32Array}",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 23,
            "itemtype": "property",
            "name": "simd_storage",
            "type": "{null|Float32x4}",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 30,
            "static": "SIMD specialization",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 35,
            "static": "Scalar specialization",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 41,
            "static": "Load SIMD.Float32x4 into vector.simd_storage",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 50,
            "static": "Store SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 59,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 70,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 81,
            "itemtype": "property",
            "name": "length",
            "type": "{number}",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 97,
            "static": 1,
            "description": "Scalar version of set length",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 135,
            "static": 1,
            "itemtype": "property",
            "name": "zero",
            "type": "Vector2",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 144,
            "itemtype": "method",
            "name": "setZero",
            "description": "Zero the vector.",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 155,
            "static": "fromFloat32Array",
            "description": "Constructs Vector2 with a given [Float32Array] as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 168,
            "static": "fromBuffer",
            "description": "Constructs Vector2 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 182,
            "itemtype": "method",
            "name": "setValues",
            "description": "Set the values of the vector.",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 195,
            "itemtype": "property",
            "name": "copy",
            "type": "{Vector2}",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 203,
            "static": "all",
            "itemtype": "property",
            "name": "all",
            "type": "Vector2",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 213,
            "static": "min",
            "description": "Set the values of [result] to the minimum of [a] and [b] for each line.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 239,
            "static": 1,
            "description": "Set the values of [result] to the maximum of [a] and [b] for each line.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 269,
            "static": 1,
            "description": "Interpolate between [min] and [max] with the amount of [a] using a linear\ninterpolation and store the values in [result].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 300,
            "itemtype": "method",
            "name": "clone",
            "description": "return a copy of this",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 309,
            "itemtype": "method",
            "name": "setFrom",
            "description": "Set this to be equal to [v]",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 321,
            "itemtype": "method",
            "name": "splat",
            "description": "Splat [arg] into all lanes of the vector.",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 345,
            "itemtype": "method",
            "name": "almostEquals",
            "description": "return if this is almost equal to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 384,
            "itemtype": "method",
            "name": "equals",
            "description": "return if this is equal to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 394,
            "itemtype": "method",
            "name": "almostZero",
            "description": "return if this is almost a zero vector",
            "params": [
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 411,
            "itemtype": "method",
            "name": "isZero",
            "description": "return if this is a Zero vector",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 420,
            "itemtype": "method",
            "name": "negate",
            "description": "Negate this",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 444,
            "itemtype": "method",
            "name": "sub",
            "description": "Subtract other to this",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 471,
            "itemtype": "method",
            "name": "add",
            "description": "Add other to this",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 498,
            "itemtype": "method",
            "name": "mul",
            "description": "Multiply other to this",
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 525,
            "itemtype": "method",
            "name": "div",
            "description": "Divide this by other",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 553,
            "itemtype": "method",
            "name": "scale",
            "description": "Scale this",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 578,
            "itemtype": "method",
            "name": "scaled",
            "description": "return Scaled copy of this",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 591,
            "itemtype": "method",
            "name": "reflect",
            "description": "Reflect [this].",
            "params": [
                {
                    "name": "normal",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 604,
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 631,
            "itemtype": "method",
            "name": "cross",
            "description": "Compute cross product",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 642,
            "itemtype": "method",
            "name": "absolute",
            "description": "Sets this to absolute values",
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 663,
            "itemtype": "method",
            "name": "clamp",
            "description": "Clamp each entry n in [this] in the range [min[n]]-[max[n]].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector2"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 694,
            "itemtype": "method",
            "name": "clampScalar",
            "description": "Clamp entries in [this] in the range [min]-[max].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 724,
            "itemtype": "method",
            "name": "isNaN",
            "description": "Check if this contains NaN values",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 736,
            "itemtype": "method",
            "name": "isInfinite",
            "description": "Check if this contains infinite values",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 748,
            "itemtype": "method",
            "name": "toString",
            "description": "Printable string",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 758,
            "itemtype": "method",
            "name": "length2",
            "description": "Squared length",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 767,
            "itemtype": "method",
            "name": "normalize",
            "description": "Normalize this",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 799,
            "itemtype": "method",
            "name": "normalized",
            "description": "return a normalized copy of this",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 809,
            "itemtype": "method",
            "name": "distanceToSquared",
            "description": "Compute squared distance to oter",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 821,
            "itemtype": "method",
            "name": "distanceTo",
            "description": "Compute distance to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 831,
            "itemtype": "method",
            "name": "floor",
            "description": "Floor entries in [this].",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 842,
            "itemtype": "method",
            "name": "ceil",
            "description": "Ceil entries in [this].",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 853,
            "itemtype": "method",
            "name": "round",
            "description": "Round entries in [this].",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector2.js",
            "line": 864,
            "itemtype": "method",
            "name": "roundToZero",
            "description": "Round entries in [this] towards zero.",
            "return": {
                "description": "",
                "type": "Vector2"
            },
            "class": "Vector2"
        },
        {
            "file": "src\\vector3.js",
            "line": 1,
            "description": "Created by grizet_j on 9/20/2015.",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 21,
            "itemtype": "property",
            "name": "storage",
            "type": "{Float32Array}",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 27,
            "itemtype": "property",
            "name": "simd_storage",
            "type": "{null|Float32x4}",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 34,
            "static": "SIMD specialization",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 39,
            "static": "Scalar specialization",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 45,
            "static": "load",
            "description": "Load SIMD.Float32x4 into vector.simd_storage",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 54,
            "static": "store",
            "description": "Store SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 64,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 75,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 86,
            "itemtype": "property",
            "name": "z",
            "type": "{Number}",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 97,
            "itemtype": "property",
            "name": "length",
            "type": "{number}",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 145,
            "static": "zero",
            "itemtype": "property",
            "name": "zero",
            "type": "Vector3",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 154,
            "itemtype": "method",
            "name": "setZero",
            "description": "Zero the vector.",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 166,
            "static": "fromFloat32Array",
            "description": "Constructs Vector3 with a given [Float32Array] as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 179,
            "static": "fromBuffer",
            "description": "Constructs Vector3 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 193,
            "itemtype": "method",
            "name": "setValues",
            "description": "Set the values of the vector.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 209,
            "static": "copy",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 218,
            "static": "all",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 228,
            "static": "min",
            "description": "Set the values of [result] to the minimum of [a] and [b] for each line.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 256,
            "static": "max",
            "description": "Set the values of [result] to the maximum of [a] and [b] for each line.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 285,
            "static": "mix",
            "description": "Interpolate between [min] and [max] with the amount of [a] using a linear\ninterpolation and store the values in [result].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 316,
            "itemtype": "method",
            "name": "clone",
            "description": "return a copy of this",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 325,
            "itemtype": "method",
            "name": "setFrom",
            "description": "Set this from another vector3",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 338,
            "itemtype": "method",
            "name": "splat",
            "description": "Splat [arg] into all lanes of the vector.",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 363,
            "itemtype": "method",
            "name": "almostEquals",
            "description": "Return if this is almost equal to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 403,
            "itemtype": "method",
            "name": "equals",
            "description": "Return if this is equal to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 425,
            "itemtype": "method",
            "name": "isZero",
            "description": "return if this is a zero vector",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 434,
            "itemtype": "method",
            "name": "negate",
            "description": "negate [this]",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 460,
            "itemtype": "method",
            "name": "sub",
            "description": "Subtract other from this",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 488,
            "itemtype": "method",
            "name": "add",
            "description": "Add other to this",
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 516,
            "itemtype": "method",
            "name": "mul",
            "description": "Multiply other to this",
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 544,
            "itemtype": "method",
            "name": "div",
            "description": "Divide this by other",
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 572,
            "itemtype": "method",
            "name": "scale",
            "description": "Scale this",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 599,
            "itemtype": "method",
            "name": "scaled",
            "description": "return Scaled copy this",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 612,
            "itemtype": "method",
            "name": "reflect",
            "description": "Reflect [this].",
            "params": [
                {
                    "name": "normal",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 625,
            "itemtype": "method",
            "name": "dot",
            "description": "Compute dot product",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 655,
            "itemtype": "method",
            "name": "cross",
            "description": "Compute cross product",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 695,
            "itemtype": "method",
            "name": "absolute",
            "description": "Set this to absolute value",
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 718,
            "itemtype": "method",
            "name": "postmultiply",
            "description": "Transforms [this] into the product of [this] as a row vector,\npostmultiplied by matrix, [arg].\nIf [arg] is a rotation matrix, this is a computational shortcut for applying,\nthe inverse of the transformation.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 743,
            "itemtype": "method",
            "name": "apllyProjection",
            "description": "Projects [this] using the projection matrix [arg]",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 777,
            "itemtype": "method",
            "name": "applyAxisAngle",
            "description": "Applies a rotation specified by [axis] and [angle].",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 789,
            "itemtype": "method",
            "name": "applyQuaternion",
            "description": "Applies a quaternion transform.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 814,
            "itemtype": "method",
            "name": "applyMatrix3",
            "description": "Multiplies [this] by [arg].",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 833,
            "itemtype": "method",
            "name": "applyMatrix4",
            "description": "Multiplies [this] by a 4x3 subset of [arg]. Expects [arg] to be an affine transformation matrix.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 859,
            "itemtype": "method",
            "name": "clamp",
            "description": "Clamp each entry n in [this] in the range [min[n]]-[max[n]].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 891,
            "itemtype": "method",
            "name": "clampScalar",
            "description": "Clamp entries in [this] in the range [min]-[max].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 921,
            "itemtype": "method",
            "name": "isNaN",
            "description": "Check is vector contains NaN values",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 934,
            "itemtype": "method",
            "name": "isInfinite",
            "description": "Check if vector contains Infinite values",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 947,
            "itemtype": "method",
            "name": "toString",
            "description": "Printable string",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 956,
            "itemtype": "method",
            "name": "length2",
            "description": "Squared length",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 984,
            "itemtype": "method",
            "name": "normalize",
            "description": "Normalize this",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1019,
            "itemtype": "method",
            "name": "normalized",
            "description": "return a normalized copy of this",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1029,
            "itemtype": "method",
            "name": "distanceToSquared",
            "description": "Compute squared distance to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1059,
            "itemtype": "method",
            "name": "distanceTo",
            "description": "Compute distance to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1069,
            "itemtype": "method",
            "name": "angleTo",
            "description": "return the angle between [this] vector and [other] in radians.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1088,
            "itemtype": "method",
            "name": "angleToSigned",
            "description": "return the signed angle between [this] and [other] around [normal] in radians.",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector3"
                },
                {
                    "name": "normal",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1103,
            "itemtype": "method",
            "name": "floor",
            "description": "Floor entries in [this].",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1115,
            "itemtype": "method",
            "name": "ceil",
            "description": "Ceil entries in [this].",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1127,
            "itemtype": "method",
            "name": "round",
            "description": "Round entries in [this].",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector3.js",
            "line": 1139,
            "itemtype": "method",
            "name": "roundToZero",
            "description": "Round entries in [this] towards zero.",
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3"
        },
        {
            "file": "src\\vector4.js",
            "line": 1,
            "description": "Created by grizet_j on 9/21/2015.",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 18,
            "itemtype": "property",
            "name": "storage",
            "type": "{Float32Array}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 23,
            "itemtype": "property",
            "name": "simd_storage",
            "type": "{null|Float32x4}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 30,
            "static": "SIMD specialization",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 35,
            "static": "Scalar specialization",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 41,
            "static": "Load SIMD.Float32x4 into vector.simd_storage",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 50,
            "static": "Store SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 59,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 70,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 81,
            "itemtype": "property",
            "name": "z",
            "type": "{Number}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 92,
            "itemtype": "property",
            "name": "w",
            "type": "{Number}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 103,
            "itemtype": "property",
            "name": "length",
            "type": "{number}",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 119,
            "static": "Scalar version of set length",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 159,
            "static": 1,
            "itemtype": "property",
            "name": "zero",
            "type": "Vector4",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 168,
            "itemtype": "method",
            "name": "Zero the vector.",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 181,
            "static": "Constructs Vector2 with a given [Float32List] as [storage].",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 194,
            "static": "Constructs Vector4 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 208,
            "itemtype": "method",
            "name": "Set the values of the vector.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 225,
            "static": "Returns a copy of v",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 235,
            "static": 1,
            "itemtype": "property",
            "name": "all",
            "type": "Vector4",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 245,
            "static": "Returns identity vector",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 256,
            "itemtype": "method",
            "name": "Set the vector to identity",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 269,
            "description": "Set the values of [result] to the minimum of [a] and [b] for each line.",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 299,
            "description": "Set the values of [result] to the maximum of [a] and [b] for each line.",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 330,
            "description": "Interpolate between [min] and [max] with the amount of [a] using a linear\ninterpolation and store the values in [result].",
            "static": 1,
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 363,
            "itemtype": "method",
            "name": "Returns a copy of this",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 372,
            "itemtype": "method",
            "name": "Sets the values from other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 386,
            "description": "Splat [arg] into all lanes of the vector.",
            "itemtype": "method",
            "name": "splat",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 412,
            "itemtype": "method",
            "name": "Check if this is almost equal to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 455,
            "itemtype": "method",
            "name": "Check if this equals other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 465,
            "itemtype": "method",
            "name": "Check if this is almost the zero vector",
            "params": [
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 484,
            "itemtype": "method",
            "name": "Check if this is the zero vector",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 493,
            "itemtype": "method",
            "name": "Negate this",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 520,
            "itemtype": "method",
            "name": "Subtract other from this",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 549,
            "itemtype": "method",
            "name": "Add other into this",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 578,
            "itemtype": "method",
            "name": "Multiply this by other",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 607,
            "itemtype": "method",
            "name": "Divide this by other",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 636,
            "itemtype": "method",
            "name": "Scale this",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 665,
            "itemtype": "method",
            "name": "Returns Scaled copy of this",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 678,
            "itemtype": "method",
            "name": "Reflect [this].",
            "params": [
                {
                    "name": "normal",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 691,
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 724,
            "itemtype": "method",
            "name": "Set this values to absolute",
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 749,
            "itemtype": "method",
            "name": "Clamp each entry n in [this] in the range [min[n]]-[max[n]].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Vector4"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 783,
            "itemtype": "method",
            "name": "Clamp entries in [that] in the range [min]-[max].",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 814,
            "itemtype": "method",
            "name": "Check if this contains NaN values",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 828,
            "itemtype": "method",
            "name": "Check if this contains infinite values",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 842,
            "metod": "Printable string",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 851,
            "itemtype": "method",
            "name": "Compute squared length",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 881,
            "itemtype": "method",
            "name": "Normalize this",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 915,
            "itemtype": "method",
            "name": "Returns a normalized copy of this",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 925,
            "itemtype": "method",
            "name": "Compute squared distance to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 957,
            "itemtype": "method",
            "name": "Compute distance to other",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 967,
            "itemtype": "method",
            "name": "Returns the angle between [this] vector and [other] in radians.",
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 988,
            "itemtype": "method",
            "name": "Floor entries in [this].",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 1001,
            "itemtype": "method",
            "name": "Ceil entries in [this].",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 1014,
            "itemtype": "method",
            "name": "Round entries in [this].",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector4.js",
            "line": 1027,
            "itemtype": "method",
            "name": "Round entries in [this] towards zero.",
            "return": {
                "description": "",
                "type": "Vector4"
            },
            "class": "Vector4"
        },
        {
            "file": "src\\vector_math.js",
            "line": 1,
            "description": "Created by grizet_j on 9/20/2015.",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\aabb2.js:262"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\matrix2.js:221"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\matrix2.js:239"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\matrix2.js:911"
        },
        {
            "message": "unknown tag: methodsetfrom",
            "line": " src\\matrix3.js:409"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\matrix3.js:920"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\quaternion.js:66"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector2.js:182"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:168"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:208"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:245"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:363"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:372"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:412"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:455"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:465"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:493"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:520"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:549"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:578"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:607"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:636"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:665"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:678"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:691"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:783"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:814"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:828"
        },
        {
            "message": "unknown tag: metod",
            "line": " src\\vector4.js:842"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:842"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:851"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:881"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:915"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:925"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:957"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:967"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:988"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:1001"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:1014"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\vector4.js:1027"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\aabb2.js:1"
        },
        {
            "message": "Missing item type\nCreate a new AABB as a copy of [other].",
            "line": " src\\aabb2.js:42"
        },
        {
            "message": "Missing item type\nCreate a new AABB with a [min] and [max].",
            "line": " src\\aabb2.js:55"
        },
        {
            "message": "Missing item type\nCreate a new AABB with a [center] and [halfExtents].",
            "line": " src\\aabb2.js:69"
        },
        {
            "message": "Missing item type\nConstructs [Aabb2] with a min/max [storage] that views given [buffer]\nstarting at [offset]. [offset] has to be multiple of\n[Float32Array.BYTES_PER_ELEMENT].",
            "line": " src\\aabb2.js:82"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\aabb3.js:1"
        },
        {
            "message": "Missing item type\nCreate a new AABB as a copy of [other].",
            "line": " src\\aabb3.js:46"
        },
        {
            "message": "Missing item type\nCreate a new AABB with a [min] and [max].",
            "line": " src\\aabb3.js:59"
        },
        {
            "message": "Missing item type\nCreate a new AABB that encloses a [sphere].",
            "line": " src\\aabb3.js:73"
        },
        {
            "message": "Missing item type\nCreate a new AABB that encloses a [triangle].",
            "line": " src\\aabb3.js:85"
        },
        {
            "message": "Missing item type\nCreate a new AABB that encloses a [quad].",
            "line": " src\\aabb3.js:97"
        },
        {
            "message": "Missing item type\nCreate a new AABB that encloses a limited [ray] (or line segment) that has\na minLimit and maxLimit.",
            "line": " src\\aabb3.js:110"
        },
        {
            "message": "Missing item type\nCreate a new AABB with a [center] and [halfExtents].",
            "line": " src\\aabb3.js:126"
        },
        {
            "message": "Missing item type\nConstructs [Aabb3] with a min/max [storage] that views given [buffer]\nstarting at [offset]. [offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "line": " src\\aabb3.js:140"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\matrix2.js:1"
        },
        {
            "message": "Missing item type\nConstructs Matrix2 with a given [Float32Array] as [storage].",
            "line": " src\\matrix2.js:31"
        },
        {
            "message": "Missing item type\nConstructs Matrix2 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "line": " src\\matrix2.js:43"
        },
        {
            "message": "Missing item type\nSolve [A] * [x] = [b].",
            "line": " src\\matrix2.js:56"
        },
        {
            "message": "Missing item type\nZero matrix.",
            "line": " src\\matrix2.js:128"
        },
        {
            "message": "Missing item type\nIdentity matrix.",
            "line": " src\\matrix2.js:138"
        },
        {
            "message": "Missing item type\nCopies values from [other].",
            "line": " src\\matrix2.js:149"
        },
        {
            "message": "Missing item type\nMatrix with values from column arguments.",
            "line": " src\\matrix2.js:162"
        },
        {
            "message": "Missing item type\nOuter product of [u] and [v].",
            "line": " src\\matrix2.js:176"
        },
        {
            "message": "Missing item type\nRotation of [radians].",
            "line": " src\\matrix2.js:190"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\matrix3.js:1"
        },
        {
            "message": "Missing item type\nLoad SIMD.Float32x4 into vector.simd_storage",
            "line": " src\\matrix3.js:69"
        },
        {
            "message": "Missing item type\nStore SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "line": " src\\matrix3.js:80"
        },
        {
            "message": "Missing item type\nConstructs Matrix3 with a given [Float32Array] as [storage].",
            "line": " src\\matrix3.js:91"
        },
        {
            "message": "Missing item type\nConstructs Matrix3 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "line": " src\\matrix3.js:103"
        },
        {
            "message": "Missing item type\nSolve [A] * [x] = [b].",
            "line": " src\\matrix3.js:118"
        },
        {
            "message": "Missing item type\nSolve [A] * [x] = [b].",
            "line": " src\\matrix3.js:142"
        },
        {
            "message": "Missing item type\nZero matrix.",
            "line": " src\\matrix3.js:243"
        },
        {
            "message": "Missing item type\nIdentity matrix.",
            "line": " src\\matrix3.js:255"
        },
        {
            "message": "Missing item type\nCopies values from [other].",
            "line": " src\\matrix3.js:266"
        },
        {
            "message": "Missing item type\nMatrix with values from column arguments.",
            "line": " src\\matrix3.js:278"
        },
        {
            "message": "Missing item type\nOuter product of [u] and [v].",
            "line": " src\\matrix3.js:292"
        },
        {
            "message": "Missing item type\nRotation of [radians].",
            "line": " src\\matrix3.js:306"
        },
        {
            "message": "Missing item type\nRotation of [radians] on X.",
            "line": " src\\matrix3.js:319"
        },
        {
            "message": "Missing item type\nRotation of [radians] on Y.",
            "line": " src\\matrix3.js:331"
        },
        {
            "message": "Missing item type\nRotation of [radians] on Z.",
            "line": " src\\matrix3.js:343"
        },
        {
            "message": "Missing item type\nSets the entire matrix to the matrix in [arg].",
            "line": " src\\matrix3.js:409"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\matrix4.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\matrix4.js:75"
        },
        {
            "message": "Missing item type",
            "line": " src\\matrix4.js:80"
        },
        {
            "message": "Missing item type",
            "line": " src\\matrix4.js:86"
        },
        {
            "message": "Missing item type",
            "line": " src\\matrix4.js:98"
        },
        {
            "message": "Missing item type\nConstructs Matrix4 with a given [Float32Array] as [storage].",
            "line": " src\\matrix4.js:111"
        },
        {
            "message": "Missing item type\nConstructs Matrix2 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32List.BYTES_PER_ELEMENT].",
            "line": " src\\matrix4.js:123"
        },
        {
            "message": "Missing item type\nSolve [A] * [x] = [b].",
            "line": " src\\matrix4.js:136"
        },
        {
            "message": "Missing item type\nSolve [A] * [x] = [b].",
            "line": " src\\matrix4.js:160"
        },
        {
            "message": "Missing item type\nSolve [A] * [x] = [b].",
            "line": " src\\matrix4.js:215"
        },
        {
            "message": "Missing item type\nZero matrix.",
            "line": " src\\matrix4.js:337"
        },
        {
            "message": "Missing item type\nIdentity matrix.",
            "line": " src\\matrix4.js:350"
        },
        {
            "message": "Missing item type\nCopies values from [other].",
            "line": " src\\matrix4.js:361"
        },
        {
            "message": "Missing item type\nMatrix with values from column arguments.",
            "line": " src\\matrix4.js:373"
        },
        {
            "message": "Missing item type\nOuter product of [u] and [v].",
            "line": " src\\matrix4.js:388"
        },
        {
            "message": "Missing item type\nRotation of [radians].",
            "line": " src\\matrix4.js:401"
        },
        {
            "message": "Missing item type\nRotation of [radians] on X.",
            "line": " src\\matrix4.js:414"
        },
        {
            "message": "Missing item type\nRotation of [radians] on Y.",
            "line": " src\\matrix4.js:427"
        },
        {
            "message": "Missing item type\nRotation of [radians] on Z.",
            "line": " src\\matrix4.js:440"
        },
        {
            "message": "Missing item type\nScale matrix",
            "line": " src\\matrix4.js:453"
        },
        {
            "message": "Missing item type\nScale matrix from values x,y,z,w",
            "line": " src\\matrix4.js:466"
        },
        {
            "message": "Missing item type\nTranslation matrix",
            "line": " src\\matrix4.js:482"
        },
        {
            "message": "Missing item type\nTranslation matrix from values x,y,z",
            "line": " src\\matrix4.js:495"
        },
        {
            "message": "Missing item type\nConstructs a Matrix4 from translation, rotation and scale",
            "line": " src\\matrix4.js:510"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\plane.js:1"
        },
        {
            "message": "Missing item type\nFind the intersection point between the three planes [a], [b] and [c] and copy it into [result].",
            "line": " src\\plane.js:17"
        },
        {
            "message": "Missing item type\nreturn a copy of other",
            "line": " src\\plane.js:43"
        },
        {
            "message": "Missing item type\nConstructs a Plane from components",
            "line": " src\\plane.js:56"
        },
        {
            "message": "Missing item type\nConstructs a Plane from a normal vector and constant value",
            "line": " src\\plane.js:71"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/27/2015.",
            "line": " src\\quad.js:1"
        },
        {
            "message": "Missing item type\nCreate a quad as a copy of [other].",
            "line": " src\\quad.js:46"
        },
        {
            "message": "Missing item type\nCreate a quad by four points.",
            "line": " src\\quad.js:61"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\quaternion.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\quaternion.js:66"
        },
        {
            "message": "Missing item type",
            "line": " src\\quaternion.js:76"
        },
        {
            "message": "Missing item type\nConstructs from axis and angle",
            "line": " src\\quaternion.js:87"
        },
        {
            "message": "Missing item type\nConstructs a quaternion with a random rotation. The random number\ngenerator [rn] is used to generate the random numbers for the rotation.",
            "line": " src\\quaternion.js:106"
        },
        {
            "message": "Missing item type\nConstructs a quaternion set to the identity quaternion.",
            "line": " src\\quaternion.js:119"
        },
        {
            "message": "Missing item type\nConstructs a quaternion from time derivative of [q] with angular velocity [omega].",
            "line": " src\\quaternion.js:130"
        },
        {
            "message": "Missing item type\nConstructs a quaternion from [yaw], [pitch] and [roll].",
            "line": " src\\quaternion.js:143"
        },
        {
            "message": "Missing item type\nConstructs a quaternion with given Float32Array as [storage].",
            "line": " src\\quaternion.js:158"
        },
        {
            "message": "Missing item type\nConstructs a quaternion with a [storage] that views given [buffer] starting at [offset].\n[offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "line": " src\\quaternion.js:170"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\ray.js:1"
        },
        {
            "message": "Missing item type\nCreate a ray as a copy of [other].",
            "line": " src\\ray.js:28"
        },
        {
            "message": "Missing item type\nCreate a ray with an [origin] and a [direction].",
            "line": " src\\ray.js:41"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\sphere.js:1"
        },
        {
            "message": "Missing item type\nCreate a sphere as a copy of [other].",
            "line": " src\\sphere.js:26"
        },
        {
            "message": "Missing item type\nCreate a sphere from a [center] and a [radius].",
            "line": " src\\sphere.js:39"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\triangle.js:1"
        },
        {
            "message": "Missing item type\nCreate a triangle as a copy of [other].",
            "line": " src\\triangle.js:33"
        },
        {
            "message": "Missing item type\nCreate a triangle by three points.",
            "line": " src\\triangle.js:47"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/20/2015.",
            "line": " src\\vector2.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector2.js:30"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector2.js:35"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector2.js:41"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector2.js:50"
        },
        {
            "message": "Missing item type\nScalar version of set length",
            "line": " src\\vector2.js:97"
        },
        {
            "message": "Missing item type\nConstructs Vector2 with a given [Float32Array] as [storage].",
            "line": " src\\vector2.js:155"
        },
        {
            "message": "Missing item type\nConstructs Vector2 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "line": " src\\vector2.js:168"
        },
        {
            "message": "Missing item type\nSet the values of [result] to the minimum of [a] and [b] for each line.",
            "line": " src\\vector2.js:213"
        },
        {
            "message": "Missing item type\nSet the values of [result] to the maximum of [a] and [b] for each line.",
            "line": " src\\vector2.js:239"
        },
        {
            "message": "Missing item type\nInterpolate between [min] and [max] with the amount of [a] using a linear\ninterpolation and store the values in [result].",
            "line": " src\\vector2.js:269"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/20/2015.",
            "line": " src\\vector3.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector3.js:34"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector3.js:39"
        },
        {
            "message": "Missing item type\nLoad SIMD.Float32x4 into vector.simd_storage",
            "line": " src\\vector3.js:45"
        },
        {
            "message": "Missing item type\nStore SIMD.Float32x4 at vector.simd_storage into vector.storage",
            "line": " src\\vector3.js:54"
        },
        {
            "message": "Missing item type\nConstructs Vector3 with a given [Float32Array] as [storage].",
            "line": " src\\vector3.js:166"
        },
        {
            "message": "Missing item type\nConstructs Vector3 with a [storage] that views given [buffer] starting at\n[offset]. [offset] has to be multiple of [Float32Array.BYTES_PER_ELEMENT].",
            "line": " src\\vector3.js:179"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector3.js:209"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector3.js:218"
        },
        {
            "message": "Missing item type\nSet the values of [result] to the minimum of [a] and [b] for each line.",
            "line": " src\\vector3.js:228"
        },
        {
            "message": "Missing item type\nSet the values of [result] to the maximum of [a] and [b] for each line.",
            "line": " src\\vector3.js:256"
        },
        {
            "message": "Missing item type\nInterpolate between [min] and [max] with the amount of [a] using a linear\ninterpolation and store the values in [result].",
            "line": " src\\vector3.js:285"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/21/2015.",
            "line": " src\\vector4.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:30"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:35"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:41"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:50"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:119"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:181"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:194"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:225"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:245"
        },
        {
            "message": "Missing item type\nSet the values of [result] to the minimum of [a] and [b] for each line.",
            "line": " src\\vector4.js:269"
        },
        {
            "message": "Missing item type\nSet the values of [result] to the maximum of [a] and [b] for each line.",
            "line": " src\\vector4.js:299"
        },
        {
            "message": "Missing item type\nInterpolate between [min] and [max] with the amount of [a] using a linear\ninterpolation and store the values in [result].",
            "line": " src\\vector4.js:330"
        },
        {
            "message": "Missing item type",
            "line": " src\\vector4.js:842"
        },
        {
            "message": "Missing item type\nCreated by grizet_j on 9/20/2015.",
            "line": " src\\vector_math.js:1"
        }
    ]
}